name: Release Helm Chart

on:
  push:
    tags:
      - 'v*.*.*' # Trigger on version tag pushes (e.g., v0.7.1)
  pull_request:
    branches:
      - main     # Trigger on PRs targeting main branch
  workflow_dispatch: {} # Allow manual triggering from the Actions tab

env:
  REGISTRY: ghcr.io
  CHART_NAME: mcp-atlassian

jobs:
  release-helm-chart:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Helm
      uses: azure/setup-helm@v4
      with:
        version: '3.14.0'

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract version from tag
      id: version
      run: |
        if [[ "${GITHUB_REF}" == refs/tags/* ]]; then
          VERSION=${GITHUB_REF#refs/tags/v}
        else
          VERSION="0.1.0-${GITHUB_SHA::8}"
        fi
        echo "version=${VERSION}" >> $GITHUB_OUTPUT
        echo "Version: ${VERSION}"

    - name: Update Chart version
      run: |
        sed -i "s/^version:.*/version: ${{ steps.version.outputs.version }}/" charts/${{ env.CHART_NAME }}/Chart.yaml
        sed -i "s/^appVersion:.*/appVersion: \"${{ steps.version.outputs.version }}\"/" charts/${{ env.CHART_NAME }}/Chart.yaml

    - name: Lint Helm chart
      run: |
        helm lint charts/${{ env.CHART_NAME }}

    - name: Package Helm chart
      run: |
        helm package charts/${{ env.CHART_NAME }} --destination .helm-releases

    - name: Push Helm chart to OCI registry
      run: |
        helm push .helm-releases/${{ env.CHART_NAME }}-${{ steps.version.outputs.version }}.tgz oci://${{ env.REGISTRY }}/$(echo "${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]')/charts

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: |
          .helm-releases/${{ env.CHART_NAME }}-${{ steps.version.outputs.version }}.tgz
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
