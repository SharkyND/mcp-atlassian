# Default values for mcp-atlassian
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: ghcr.io/sharkynd/mcp-atlassian
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80
  targetPort: 8000

ingress:
  enabled: false
  className: ""
  annotations: {}
    # IP-based sticky sessions - More reliable for stateful protocols like MCP
    # nginx.ingress.kubernetes.io/upstream-hash-by: "$remote_addr consistent"

    # Proxy settings for MCP protocol
    # nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
    # nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
    # nginx.ingress.kubernetes.io/proxy-connect-timeout: "60"
    # nginx.ingress.kubernetes.io/proxy-http-version: "1.1"
    # nginx.ingress.kubernetes.io/proxy-buffering: "off"
    # nginx.ingress.kubernetes.io/proxy-request-buffering: "off"

    # WebSocket support for MCP protocol
    # nginx.ingress.kubernetes.io/configuration-snippet: |
    #   proxy_set_header Upgrade $http_upgrade;
    #   proxy_set_header Connection "upgrade";
    #   proxy_set_header X-Forwarded-Host $http_host;
    #   proxy_set_header X-Forwarded-Proto $scheme;
    #   proxy_set_header X-Real-IP $remote_addr;
    #   proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #   proxy_cache_bypass $http_upgrade;

  hosts:
    - host: mcp-atlassian.local
      paths:
        - path: /
          pathType: Prefix
  tls: []
  #  - secretName: mcp-atlassian-tls
  #    hosts:
  #      - mcp-atlassian.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 500m
  #   memory: 512Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 5
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

livenessProbe:
  httpGet:
    path: /healthz
    port: http
  initialDelaySeconds: 30
  periodSeconds: 10

readinessProbe:
  httpGet:
    path: /readyz
    port: http
  initialDelaySeconds: 5
  periodSeconds: 5

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}

# Pod Disruption Budget for high availability
podDisruptionBudget:
  enabled: false
  # Minimum number of pods that must be available during disruptions
  minAvailable: 1
  # Maximum number of pods that can be unavailable during disruptions
  # maxUnavailable: 1

# Environment variables for the MCP Atlassian server
env:
  # Server configuration
  PORT: "8000"
  TRANSPORT: "streamable-http"

  # Atlassian URLs (configure these for your environment)
  # CONFLUENCE_URL: "https://your-confluence.com"
  # JIRA_URL: "https://your-jira.com"

  # Optional: Logging configuration
  # MCP_VERBOSE: "false"
  # MCP_VERY_VERBOSE: "false"
  # MCP_LOGGING_STDOUT: "true"

  # Optional: Authentication configuration
  # ATLASSIAN_OAUTH_ENABLE: "false"

  # Optional: Read-only mode
  # READ_ONLY_MODE: "false"

  # Optional: Require username in request headers
  # REQUIRE_USERNAME: "false"

  # Optional: Custom headers
  # JIRA_CUSTOM_HEADERS: ""
  # CONFLUENCE_CUSTOM_HEADERS: ""

# Secret configuration for Atlassian authentication
# Create secrets manually or use external secret management
secrets:
  # API Token authentication (Atlassian Cloud)
  # jiraApiToken: ""
  # confluenceApiToken: ""

  # Personal Access Token authentication (Atlassian Server/DC)
  # jiraPersonalToken: ""
  # confluencePersonalToken: ""

  # OAuth 2.0 authentication (Atlassian Cloud)
  oauth:
    # clientId: ""
    # clientSecret: ""
    # redirectUri: ""
    # scope: ""
    # cloudId: ""
    # accessToken: ""

# Monitoring and metrics configuration
monitoring:
  # Enable Prometheus metrics collection
  # Requires prometheus-client package (included by default)
  enabled: true

  # ServiceMonitor configuration for Prometheus Operator
  serviceMonitor:
    # Enable ServiceMonitor creation for Prometheus discovery
    enabled: false

    # Scraping interval for metrics collection
    interval: 30s

    # Timeout for each scrape request
    scrapeTimeout: 10s

    # Additional labels for ServiceMonitor
    labels: {}
      # prometheus: kube-prometheus

    # Additional annotations for ServiceMonitor
    annotations: {}

    # Metric relabeling rules (optional)
    # Used to modify metrics before storing in Prometheus
    metricRelabelings: []
    # - sourceLabels: [__name__]
    #   targetLabel: __name__
    #   replacement: mcp_${1}

    # Relabeling rules (optional)
    # Used to modify target labels before scraping
    relabelings: []
    # - sourceLabels: [__meta_kubernetes_pod_name]
    #   targetLabel: pod
    #   replacement: ${1}
